apply plugin: 'com.android.application'
def cfg = rootProject.ext.android
def dpc = rootProject.ext.dependencies
android {
    compileSdkVersion cfg.compileSdkVersion
    defaultConfig {
        applicationId cfg.applicationId
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
    }
    //配置签名
    signingConfigs {
        release {
            storeFile file("tools/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        debug {
            storeFile file("tools/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            //log配置
            buildConfigField "boolean" ,"LOG_DEBUG" ,"true"
            //配置网址
            buildConfigField ('String','SERVER_URL','"http://xx8080.com"')
            signingConfig signingConfigs.debug
            //其次解决三方在Manifest文件的配置问题(这里的“你替代的内容”，不能为特殊关键词，比如：TRUE，否则在Java代码中获取不到meta-data中的值)
            manifestPlaceholders = [
                    rong_cloud_app_key:"你替代的内容",
                    rong_cloud_app_secret: "你替代的内容",
            ]
        }
        release {
            minifyEnabled true
            buildConfigField "boolean" ,"LOG_DEBUG" ,"false"
            buildConfigField ('String','SERVER_URL','"http://official.com"')
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    rong_cloud_app_key:"你替代的内容",
                    rong_cloud_app_secret: "你替代的内容",
            ]
        }
    }

}

dependencies {
    implementation dpc["constraint"]
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation dpc["appcompat-v7"]
    implementation dpc["cardView"]
    implementation dpc["recyclerView"]
    implementation dpc["gson"]
    implementation dpc["glide"]
    implementation dpc["butterknife"]
    annotationProcessor dpc["glide_annotationProcessor"]
    //适配8.0toast
    implementation dpc["toast8.0"]
    implementation project(':baselibrary')
    implementation project(':qrbarcodelibrary')
    implementation 'com.facebook.rebound:rebound:0.3.8'
    implementation 'com.tumblr:backboard:0.1.0'
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                //这里写你想统一的版本是多少，前提是你sdk里有
                details.useVersion '27.1.1'
            }
        }
    }
}
